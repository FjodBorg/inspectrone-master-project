Ply_ballast_tank.ply works alright but ballast_tank.ply is bad

Ransac vs Teaser

Knn gpu vs cpu

try out faiss'
FCGF
teaser
Ransac



TODO 
Work on kinect to start with
Pose og faiss
read before working on faiss
Use kinetc groundtruth for pose esitmation

IF doable:
rviz instead of open3d visulization
Continuer pose esitmation (2Hz?) for mynteye and kinect
32 Features in pytorch model


# 23 march
add resume dir in config.py (add translation)

look into retraining!
    add rotation around pitch and/or roll together with yaw (line ~87 in data_loader.py)
    Remove scale (we don't scale things here) (line 195)
    translation is not important
    use ransac and icp to make perfect registration
shape recognizion (segmentation?)


check fitness (research fast methods)
    Box filtering (around the translated pointcloud) to check if pointcloud fitness is good
    using 'center' points only check feature points (implment this first)
    ransac?
    plane fitting? (plane orientation fitting)
    corner fitting? 
    particle filter?
    correspondences?
        Check corner correspondences neighbors to see if fit correctly?
        bag of words (word is histogram of features) approach?
        together with KNN use bag of words? (detecting area/obj) 

        look into papers on bag of words on pointclouds
    
1. fitting (on the point cloud itself)
2. bag of words (fixing point clouds)
3. particle filter (esitmation input into new esitmation)


write a ~1-2 page description of each method 


training:
    use ballast_tank as first pcl
    apply augumentation for ballast and scan in rotations
    only consider the paris if it has 80% fitness


march 30:

Find a tool to convert bags to 3dmatch format?
try retraining using new format
ask rune for retraining once it is tested

Store pcd.npy
store color.npy

Overlap ratio needs to be calculated
and text file with all npz files in and combination 
    [pcd1, pcd2, overlap ratio]

###
write about quaternion averageing
bad imu (missing data), estimate something close to it using previous transform
Ask about imu frame, it doesn't seem to be right
where is imu frame, what is the relation to imu frame. What is the "groundtruth" pose?


# 6 april
ideas
    1. Cut tank into pieces for dataset
    2. match between scans
    3. match with whole tank
    
    (crop box function open3d) open3d.geometry.crop_point_cloud

    once dataset works, give to rune
    once dataset works with kinect try out mynteye
    upload dataset to nas (find guide on teams)

Final Loss: 0.238, RTE: 0.715, RRE: 0.188, Hit Ratio: 0.099, Feat Match Ratio: 0.780
Final Loss: 0.233, RTE: 1.259, RRE: 0.356, Hit Ratio: 0.204, Feat Match Ratio: 1.000
Final Loss: 0.170, RTE: 0.987, RRE: 0.289, Hit Ratio: 0.238, Feat Match Ratio: 1.000
Final Loss: 0.139, RTE: 0.623, RRE: 0.153, Hit Ratio: 0.253, Feat Match Ratio: 1.000
Final Loss: 0.185, RTE: 0.905, RRE: 0.247, Hit Ratio: 0.236, Feat Match Ratio: 1.000
Final Loss: 0.244, RTE: 1.325, RRE: 0.380, Hit Ratio: 0.222, Feat Match Ratio: 1.000

# 13 april 
    epocs vs loss / hit ratio
    before after training performance (on test set)
    transfer learning
    writing report and to testings (video)
    correspondences

    hit ratio = if transform point == target point within dist hit_thr 

do option for cropping ply's 
    remove random cloud parts
    find way to crop smartly
    cross matching for ballast tank parts too? 


make option to delete every file in folder
cross_scan matching is baaad since it tries to find features to match with the scans and not container

How is the drone set up ?

plane estimating for cropping?
add noise to scans 

Cropping has minimum size of length+width+height of 6 to 
ensure a region is large enough. Other than that the cloud size>=10000
is checked to ensure that it is picking a region that actually has 
points in it




# 20 april
    Add noise to training (estimate how much?)
    maybe increase the crop smaples even further?
    add plan for skeleton for thesis next week\ (Responsible: Evan)
        contents, chapters ect.
        get an example?

    Rune needs to put pressure on me for the training part on thesis

    perhaps try cross_matching tanks?

    quility value for match:
        penetalize points outside of current map
        define bounding box of map, if outside -> bad voxel
    how does evaluate_registration work (o3d)???

    0.125 hit ratio makes it hard to match, since many features can be close

    Teaser makes it slower or impossible for matching when it's retrained with high hit ratio
    Tr√¶n algoritmen med en anden matcher aka teaser???




# 27 april
    discuess visual intertai odometry with rune (we alreadyt have it)

    intro duction is small
        motivation, why and why is it import, why did i choose it and so forth
            Why did i choose, it build around 3d spaces and point clouds
            lack of gps, why use camera, low light
            Applications, that have been used before and can be used for. 
            Use title
            absolute is good because we need to know exactrly where it is
            Visual inertia inbetween absolute point feature matching
            in what body frame relative to map (absolute)
            cant solve navigation without positions
            make it the most important thing in the world (make it sound so)
        
        Objective, nummerical requiremens is needed ( add them from project plan )
            use thrust vector for intruduction
            seconds or less or why for update rate for matching why?(have reference, from paper, rune, force etc)


        hidden related work (citing and so on) in intro 

        related work (dont use analysis as title) (where to put it)
            confined space localization
                name issue
            Object matching 
                FCGF

            vio (rovio)

            my task is transfer FCGF to make it work for localization (localization instaead of objects)
            Here in related work and conclusion
                (called contribution of this thesis)
            
    System description
        how it works
        diferrent approaches (make analysis of how it could be done)
            (alternatives? or how it could be done) 
                discirbe how fcgf and smoothnet works
        With timing (high level)
        one for point cloud
        one for rovio
        one for data creation

    different tests
        testins sub systems 
        testing as a whole system
        1000 matches and check how good 
        accurecy of localization over time
        (good choice for philip anasasia)
        remeber to the final test

    conclusion 
        concluded i succeeded doing everything i need (feel confident)
        thrust over did it (mention every thing)'
        comeback to the requirements and how they are solved (more fluently)
        What is to be achieved (use motivation). Now it's done the system is able to do x,y,z how good it is
        Say what i made 

    




voxel size needs to be same for data and training config! 
Spartical convolution (the same distance between voxels for FCGF (xyz/voxel_size))
FCGF paper spacial convolution
Make plots with different ICP steps

When correspondence set is above 4000 V we get 10mil eges which takes forever for teaser, 1 mil edges (2000 V) seems fine
increasing noise bound makes teaser faster
find k max and decrease it
mutual filters
teaser vs ransac 

teaser noise bound (estimates it to 0.8)
noise bound 0.04 is slow at times but almost all estimates are good
noise bound 0.2 good balance between speed and quality (some poor estimates)
noise bound 0.4 is more consistant speed but poorer estimates
noise bound 0.8 poor estimates
noise bound 1.2 is super slow


# todo for next week or plot the distance afterwards

Limit the correspondences (random)

calculate distance between correspondences
draw correspondence lines after match

# next week decide where to go absolute or training, try out on jetson

For next week work on absolute
graph slam for absolute (g2o)
graph relaxsation (g2o might not support it) (might not work if conflicting)

try out fitness instaed of overlap ?


the model is better
make the box plot 
before after
timings 
accurecy
fitness 
localization 

# MAY now
retrain the model

decrease features helped the performance ( find a smart way )
look at dimensional space and find the shortest in 32d
randomly choose points

just add noise to npz, (it's easier that way), but not super generalized

Priority list

0. Finalized noise? if it takes a lot of time 
1. Localization?
    a. Slam
        - Pose-landmark graph optimization (prior map or not) 
            - pose from vi-odom (rovio) (constraint) (~10Hz)
            - Landmarks generated by FCGF (feature discriptors 32D)  (~1Hz)
            - Framework for saving features
                - only the one that has correspondences
            - Constraints between landmark and pose (Teaser)
            - Landmarks mapping realtime or prior (easy) 
    b. graph optimization with relaxation (g2o or ceres and examples) (i have the landmarks and pose)
    compare methods 
    start with assume we have the full map (No relaxation, so no post processing)

    perhaps go to bags of words
2. 

# minimum ellipse enclosing a set of points
noise depends on distance and the source of noise is always on the boundtry since hte camera cant look back
only add noise to scans and not tank
try out different noise types



# TODO make graph from execution time vs fitness?
# correspondences over fitness 
# correspondences over execution time

# make correspondence selecting  algorithm for choosing diverse matches
# bag of words with correspondence http://doriangalvez.com/papers/GalvezTRO12.pdf



# maybe start with robot_localization and then slam
# graph optimization without relaxation its the same as kalamn (identical for simple optimziation (bundle adjustment))
    # TODO Convert fitness to covariance in some way
    # TODO maybe use information aobut the not matched points in x y z


# https://ieeexplore.ieee.org/document/8954799 
# i dont think ^ is good

publish transform from matching and calculate uncertainty in each direction between rovio and fcgf?
    calculate all pixels outside of the map and use that as estimation for x y z? 

    threshold for fitness and just throwaway everything less and use the covariance distance

icp covariance

distance between matcher and rovio transform as covariance

Orientation (maybe not needed) and pose covariance (from outlier)


# TODO read this paper and look into it for maybe next time
https://arxiv.org/pdf/1909.05722.pdf


a lot of implementation not so much theory from other papers?
    maybe add the bounding box thing

Questions:
    Do i need many references? Since most of my doing is implementation and ros specific
    PhD vs work experience in robotics
    Research  and development, with and without phd 
    Erhvers phd vs academic phd
    phd in another danish city / in another country
    Starting buissness,

./scripts_new/start_container.sh "roslaunch rovio rovio_node_mynteye.launch"
